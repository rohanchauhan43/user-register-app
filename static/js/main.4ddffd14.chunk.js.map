{"version":3,"sources":["constants/constants.js","services/userService.js","components/AddUser.jsx","components/PaginationView.jsx","components/UserList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["API_BASE_URL","requestHeader","addUser","user","a","axios","method","headers","data","JSON","stringify","getAllUser","activePage","AddUser","history","useHistory","useState","name","email","gender","status","setUser","isBusy","setIsBusy","Grid","container","columns","textAlign","Row","Column","Button","positive","to","Form","Field","Input","type","placeholder","value","onChange","event","target","Radio","label","checked","primary","fluid","onClick","then","response","alert","push","catch","error","console","log","loading","PaginationView","defaultActivePage","totalPageCount","onPageChange","Pagination","ellipsisItem","content","Icon","icon","firstItem","lastItem","prevItem","nextItem","totalPages","UserListView","props","userList","setUserList","deletedUserId","setDeletedUserId","shouldShowDeleteConfirmation","setShouldShowDeleteConfirmation","setTotalPageCount","setDefaultActivePage","useEffect","fetchUsers","meta","pagination","pages","page","ConfirmationDialog","Confirm","open","header","find","item","id","onCancel","onConfirm","Table","Header","HeaderCell","Body","map","Cell","color","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ddffd14.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://gorest.co.in';","import axios from \"axios\";\r\nimport { API_BASE_URL } from \"../constants\";\r\nconst requestHeader = {\r\n    'content-type': 'application/json'\r\n};\r\n\r\nexport const addUser = async (user) => {\r\n\r\n    return axios(`https://gorest.co.in/public-api/users`, {\r\n        method: 'POST',\r\n        headers: requestHeader,\r\n        data: JSON.stringify(user)\r\n    });\r\n};\r\n\r\nexport const getAllUser = async (activePage=1) =>{\r\n    return axios(`${API_BASE_URL}/public-api/users?page=${activePage}`, {\r\n        method: 'GET',\r\n        headers: requestHeader,\r\n    });\r\n\r\n};","import React, { useState } from 'react';\r\nimport { Grid, Form, Input, Button, Divider, Radio } from 'semantic-ui-react';\r\nimport { Link , useHistory} from 'react-router-dom';\r\nimport { addUser } from '../services';\r\n\r\nexport const AddUser = ()=>{\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({\r\n        name:'',\r\n        email:'',\r\n        gender:'',\r\n        status:'active'\r\n    });\r\n\r\n    const [isBusy, setIsBusy] = useState(false);\r\n\r\n    const onAddNewUser =(event) =>{\r\n        setIsBusy(true);\r\n        \r\n        addUser(user).then((response) =>{\r\n            alert('User Added Successfully !!');\r\n            history.push('/');\r\n            setIsBusy(false);\r\n        }).catch((error) =>{\r\n            alert('Something went wrong !!');\r\n            console.log(error);\r\n            setIsBusy(false);\r\n        })\r\n    };\r\n\r\n    return(\r\n       <Grid container columns=\"1\" textAlign=\"left\">\r\n            <Grid.Row columns=\"2\">\r\n                <Grid.Column>\r\n                    <h1>Add New User</h1>\r\n                </Grid.Column>\r\n\r\n                <Grid.Column>\r\n                <Button positive> <Link to={`/`}>Go to User List </Link></Button>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <span> User Name </span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter User Name\"\r\n                                value={user.name}\r\n                                onChange={(event) => setUser({ ...user, name: event.target.value })}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <span> Email ID </span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Email ID\"\r\n                                value={user.email}\r\n                                onChange={(event) => setUser({ ...user, email: event.target.value })}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Form>\r\n                        <span> User Gender </span>\r\n                        <Form.Field>\r\n                            <Radio\r\n                                label=\"Male\"\r\n                                value=\"male\"\r\n                                name=\"gender\"\r\n                                checked={user.gender === 'male'}\r\n                                onChange={(event, { value }) => setUser({ ...user, gender: value })}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Radio\r\n                                label=\"Female\"\r\n                                value=\"female\"\r\n                                name=\"gender\"\r\n                                checked={user.gender === 'female'}\r\n                                onChange={(event, { value }) => setUser({ ...user, gender: value })}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <Button primary fluid onClick={onAddNewUser} loading={isBusy} >Add New User</Button>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n\r\n       </Grid>\r\n    );\r\n}","import React from \"react\";\r\nimport { Pagination, Icon } from \"semantic-ui-react\";\r\n\r\nexport const PaginationView = ({ defaultActivePage, totalPageCount, onPageChange }) => {\r\n\r\n    return (\r\n        <Pagination\r\n            onPageChange={onPageChange}\r\n            defaultActivePage={defaultActivePage}\r\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\r\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\r\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\r\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\r\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\r\n            totalPages={totalPageCount}\r\n        />\r\n    )\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Table, Confirm } from \"semantic-ui-react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { PaginationView } from './PaginationView';\r\nimport { getAllUser } from '../services';\r\n\r\nexport const UserListView = (props) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [deletedUserId, setDeletedUserId] = useState(0);\r\n    const [shouldShowDeleteConfirmation, setShouldShowDeleteConfirmation] = useState(false);\r\n    const [totalPageCount, setTotalPageCount] = useState(0);\r\n    const [defaultActivePage, setDefaultActivePage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        fetchUsers(1);\r\n    }, []);\r\n\r\n\r\n    const fetchUsers = (activePage) =>{\r\n        getAllUser(activePage).then((response) => {\r\n            if(response.status === 200){\r\n                setUserList(response?.data?.data);\r\n                setTotalPageCount(response?.data.meta?.pagination?.pages);\r\n                setDefaultActivePage(response?.data.meta?.pagination?.page);\r\n            }\r\n           // setUserList(response);\r\n        }).catch((error) => {\r\n            alert('Error');\r\n        })\r\n    };\r\n\r\n    const onPageChanged = (event, data) =>{\r\n        setDefaultActivePage(data?.activePage);\r\n        fetchUsers(data?.activePage);\r\n    }\r\n\r\n    const onDeleteUser = (id) => {\r\n        setDeletedUserId(id);\r\n        setShouldShowDeleteConfirmation(true);\r\n    };\r\n\r\n    const onDeleteUserConfirmHandler = (event) => {\r\n        setShouldShowDeleteConfirmation(false);\r\n        // delete user Api call\r\n    }\r\n\r\n\r\n    const ConfirmationDialog = (<Confirm\r\n        open={shouldShowDeleteConfirmation}\r\n        header={`Deleting User - ${userList?.find((item) => item.id === deletedUserId)?.name}`}\r\n        content='Are you sure you want to Delete this User ?'\r\n        onCancel={() => setShouldShowDeleteConfirmation(false)}\r\n        onConfirm={onDeleteUserConfirmHandler}\r\n    />);\r\n\r\n\r\n    return (\r\n        <>\r\n            {ConfirmationDialog}\r\n\r\n            <Grid container columns=\"1\">\r\n                <Grid.Row columns=\"2\">\r\n                    <Grid.Column>\r\n                        <h1>User List</h1>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column>\r\n                        <Button positive> <Link to={`/adduser`}> Add New User </Link></Button>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n\r\n                     { (totalPageCount > 0 && defaultActivePage !== 0) && <PaginationView defaultActivePage={defaultActivePage} totalPageCount={totalPageCount} onPageChange={onPageChanged}/> }\r\n                        <Table>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>Name</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Email</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Gender</Table.HeaderCell>\r\n                                    <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {userList?.map((user) => (<Table.Row>\r\n                                    <Table.Cell>{user.name}</Table.Cell>\r\n                                    <Table.Cell>{user.email}</Table.Cell>\r\n                                    <Table.Cell>{user.gender}</Table.Cell>\r\n                                    <Table.Cell>\r\n                                        <Button key={`${user.id}-${user.name}`} color=\"red\" onClick={() => onDeleteUser(user.id)}>Delete</Button>\r\n                                    </Table.Cell>\r\n                                </Table.Row>))}\r\n                            </Table.Body>\r\n\r\n                        </Table>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { UserListView, AddUser } from './components';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>User Registration App</h1>\n      </header>\n      <Router>\n     <Switch>\n       <Route exact path=\"/\" component={UserListView} />\n       <Route exact path=\"/adduser\" component={AddUser}/>\n     </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}